// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241005075617_EditeLabel")]
    partial class EditeLabel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Hall", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreaationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("Domain.LabelType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreaationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hallID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("hallID");

                    b.ToTable("LabelTypes");
                });

            modelBuilder.Entity("Domain.Machine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreaationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HallID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HallID");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Domain.OptionPackaging", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreaationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HallID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypePackage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HallID");

                    b.ToTable("OptionInPackaging");
                });

            modelBuilder.Entity("Domain.label", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Den")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emptyfield1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emptyfield2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emptyfield3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emptyfield4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filament")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interwoven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<string>("Mingle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfPackaging")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warp_Direction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yarn_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MachineID");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Domain.LabelType", b =>
                {
                    b.HasOne("Domain.Hall", "HallProp")
                        .WithMany("LabelTypes")
                        .HasForeignKey("hallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HallProp");
                });

            modelBuilder.Entity("Domain.Machine", b =>
                {
                    b.HasOne("Domain.Hall", "HallProp")
                        .WithMany("Machines")
                        .HasForeignKey("HallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HallProp");
                });

            modelBuilder.Entity("Domain.OptionPackaging", b =>
                {
                    b.HasOne("Domain.Hall", "HallProp")
                        .WithMany("OptionPackaging")
                        .HasForeignKey("HallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HallProp");
                });

            modelBuilder.Entity("Domain.label", b =>
                {
                    b.HasOne("Domain.Machine", "MachineProp")
                        .WithMany("Labels")
                        .HasForeignKey("MachineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineProp");
                });

            modelBuilder.Entity("Domain.Hall", b =>
                {
                    b.Navigation("LabelTypes");

                    b.Navigation("Machines");

                    b.Navigation("OptionPackaging");
                });

            modelBuilder.Entity("Domain.Machine", b =>
                {
                    b.Navigation("Labels");
                });
#pragma warning restore 612, 618
        }
    }
}
